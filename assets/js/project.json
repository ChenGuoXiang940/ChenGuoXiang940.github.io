{
    "articles": {
        "OCC_myproject": {
            "title": {
                "en": "Simple Control Center",
                "zh": "簡易的行控中心"
            },
            "tags": {
                "en": ["Simulation", "Database","Windows Forms"],
                "zh": [ "模擬", "資料庫","Windows Forms"]
            },
            "repositoryLink": "https://github.com/ChenGuoXiang940/NTCUST_OCC_myproject.git",
            "sections": [
                {
                    "title": {
                        "en": "Form Design",
                        "zh": "表單設計"
                    },
                    "content": {
                        "en": "<p>This control center system interface integrates functions such as train status monitoring, route map visualization, flexible train control, and emergency event handling. It features intuitive operation, comprehensive information, and efficient response. Suitable for application in train operation scheduling and event handling, improving overall management efficiency and safety.</p><img src='assets/images/p1-1.png' alt='OCC' class='centered-image' onclick=\"openModal('assets/images/p1-1.png', 'OCC')\">",
                        "zh": "<p>這個行控中心系統界面整合了列車狀態監控、路線圖可視化、列車靈活控制、事件應急處理等功能，具有操作直觀、信息全面和響應高效的特點。適合應用於列車運行調度和事件處理中，提升整體管理效率和安全性。</p><img src='assets/images/p1-1.png' alt='行控中心' class='centered-image' onclick=\"openModal('assets/images/p1-1.png', '行控中心')\">"
                    }
                },
                {
                    "title": {
                        "en": "Main Functions",
                        "zh": "主要功能"
                    },
                    "content": {
                        "en": "<ul><li>Users can operate the train themselves</li><li>Always keep track of the current time</li><li>Use simulation calculations to estimate the current status of the train</li><li>Route map visualization</li><li>Emergency event handling</li><li>User feedback function</li><li>More functions to be developed in the future (maintenance and repair plans, energy management connected to the database)</li></ul>",
                        "zh": "<ul><li>使用者可以自行操作列車</li><li>時刻掌握當前時間</li><li>使用模擬計算來預估列車的當前狀態</li><li>路線地圖可視化展示</li><li>緊急事件處理</li><li>用戶回饋功能</li><li>更多功能日後開發(維護和檢修計劃、能源管理連接資料庫)</li></ul>"
                    }
                },
                {
                    "title": {
                        "en": "Function Introduction",
                        "zh": "功能介紹"
                    },
                    "content": {
                        "en": "<h4>1. Station Status</h4><p>Please select the station name, and you can adjust the priority.</p><p>The timetable includes the name of the train that will arrive, the estimated arrival time, the starting station, and the terminal station.</p><h4>2. Train Status and Operation</h4><p>Please select the train name, and you can adjust the priority and change the terminal station, but first stop temporarily.</p><ul><li>The train's acceleration when leaving the station is 2.5 m/s², maintaining and not exceeding 110km/h.</li><li>The train's acceleration when entering the station is -2.0 m/s².</li><li>“Brake” braking acceleration is -3.0 m/s² for emergency braking.</li><li>“Start” to start driving acceleration, needs to be on the track.</li><li>“Depart” waiting for departure.</li><li>“Stop at station” does not depart at this station, needs to stop at the station first.</li><li>If the station priority is lower than the train, it will not stop temporarily.</li></ul><ul><li>Trains in the same direction will not depart at the station at the same time, considering safety issues.</li><li>If the number of platforms to enter the station is insufficient, it will not depart, and it needs to wait for the train already at the platform to leave the station.</li><li>Each platform has one northbound and one southbound for trains to stop.</li></ul><h4>3. Route Map</h4><p>Click on the station name to directly change the station name of the train station status.</p><p>Arrow color description:</p><ul><li>Black arrow: No train is running here.</li><li>Orange arrow: A train is about to enter or leave the station.</li><li>Blue arrow: A train is running here.</li><li>Red arrow: There is a safety issue.</li></ul><h4>4. Event Handling</h4><p>Select the event and train, check the contact unit, and the detailed content can be empty.</p><p>Simulate event reporting function.</p>",
                        "zh": "<h4>1. 車站狀態</h4><p>請選擇車站名稱，可以調整優先序。</p><p>時刻表包含將進站的列車名、預估抵達時間、起始站、終點站。</p><h4>2. 列車狀態及操作</h4><p>請選擇列車名稱，可以調整優先序、更改終點站，但先臨停。</p><ul><li>列車出站加速度為 2.5 m/s²，維持且不超過 110km/h。</li><li>列車進站加速度為 -2.0 m/s²。</li><li>「煞車」煞車加速度為 -3.0 m/s² 用於急煞。</li><li>「啟動」要開始行駛加速，需要在軌道上。</li><li>「發車」等候發車。</li><li>「停靠站」在此站不發車，需要先停靠在車站。</li><li>車站優先序如果低於列車則不會臨停。</li></ul><ul><li>同方向列車不會在車站同時發車，考慮安全問題。</li><li>如果要進站的月台數不足則不會發車，需等待已在進站月台的列車離站。</li><li>一個月台有各一個北上和南下可給列車停靠。</li></ul><h4>3.路線地圖</h4><p>點選車站名可直接更改列車站狀態的車站名。</p><p>箭頭顏色說明：</p><ul><li>黑色箭頭：無列車在此行駛。</li><li>橘色箭頭：有列車要進站或離站。</li><li>藍色箭頭：有列車正在此行駛。</li><li>紅色箭頭：存在安全問題。</li></ul><h4>4. 事件處理</h4><p>選擇事件及列車，勾選聯絡單位，詳細內容可為空。</p><p>模擬事件回報功能。</p>"
                    }
                }
            ]
        },
    "shoppingPlatform": {
        "title": {
            "en": "Shopping Platform",
            "zh": "購物平台"
        },
        "tags": {
            "en": ["Flutter","Django","Database","render"],
            "zh": ["Flutter","Django","資料庫","render"]
        },
        "repositoryLink": "https://github.com/ChenGuoXiang940/SC2_myproject.git",
        "sections": [
            {
                "title": {
                    "en": "Registration and Login Page",
                    "zh": "註冊與登入頁面"
                },
                "content": {
                    "en": "<ul><li>Users can create an account through the registration page (simulation only, no storage).</li><li>The login page allows users to enter their account and password to enter the main screen (no backend verification required).</li></ul><img src='assets/images/p2-1.png' alt='LoginPage' class='centered-image' onclick=\"openModal('assets/images/p2-1.png', 'LoginPage')\">",
                    "zh": "<ul><li>使用者可透過註冊頁面創建帳號</li><li>登入頁面可讓使用者輸入帳號密碼並進入主畫面</li></ul><img src='assets/images/p2-1.png' alt='登入' class='centered-image' onclick=\"openModal('assets/images/p2-1.png', '登入')\">"
                }
            },
            {
                "title": {
                    "en": "Main Screen (Product List)",
                    "zh": "主畫面（商品列表）"
                },
                "content": {
                    "en": "<ul><li>Displays multiple products, including name, image, and price.</li><li>Provides an 'Add to Cart' button to add products to the shopping cart.</li><li>The UI should clearly display the products and consider responsive design.</li></ul><img src='assets/images/p2-3.png' alt='Sidebar' class='centered-image' onclick=\"openModal('assets/images/p2-3.png', 'Sidebar')\"><img src='assets/images/p2-2.png' alt='Product List' class='centered-image' onclick=\"openModal('assets/images/p2-2.png', 'Product List')\">",
                    "zh": "<ul><li>顯示多個商品，包含名稱、圖片、價格</li><li>提供「加入購物車」按鈕，可將商品加入購物車</li><li>UI 需清楚展示商品，並考慮響應式設計</li></ul><img src='assets/images/p2-3.png' alt='側邊欄' class='centered-image' onclick=\"openModal('assets/images/p2-3.png', '側邊欄')\"><img src='assets/images/p2-2.png' alt='商品列' class='centered-image' onclick=\"openModal('assets/images/p2-2.png', '商品列')\">"
                }
            },
            {
                "title":{
                    "en":"Setting",
                    "zh":"設定"
                },
                "content":{
                    "en":"<img src='assets/images/p2-4.png' alt=Setting' class='centered-image' onclick=\"openModal('assets/images/p2-4.png', 'Setting')\">",
                    "zh":"<img src='assets/images/p2-4.png' alt='設定' class='centered-image' onclick=\"openModal('assets/images/p2-4.png', '設定')\""
                }
            },
            {
                "title": {
                    "en": "Backend Status",
                    "zh": "後端運行狀態"
                },
                "content": {
                    "en": "<img src='assets/images/p2-5.png' alt='Backend' class='centered-image' onclick=\"openModal('assets/images/p2-5.png', 'Backend')\">",
                    "zh": "<img src='assets/images/p2-5.png' alt='後端' class='centered-image' onclick=\"openModal('assets/images/p2-5.png', '後端')\">"
                }
            },
            {
                "title": {
                        "en": "Introduction",
                        "zh": "介紹"
                    },
                    "content": {
                        "en": "For the UI, I chose Flutter's responsive design to ensure a good presentation on different devices. The backend uses Django REST Framework to build APIs and communicates data through HTTP libraries. PostgreSQL provides a stable data storage structure, making it easy to manage user data and product information. During deployment, Render's platform simplified the process, especially with its robust support for Django + PostgreSQL, allowing me to quickly bring the backend online. The compiled results of Flutter Web can also be directly deployed on Render. Challenges encountered included configuring plugins, generating requirements.txt, and setting environment variables. These issues, while time-consuming, deepened my understanding of full-stack architecture and debugging processes. In summary, this project integrates technologies and enhances practical skills, not only familiarizing me with Flutter and Django integration but also giving me a clear grasp of the complete process of cloud deployment and data flow.",
                        "zh": "UI 部分我選擇 Flutter 的響應式設計來確保在不同裝置上皆能良好呈現。Django 的後端使用 Django REST Framework 架設 API，並透過 HTTP 套件進行資料互通。PostgreSQL 則提供穩定的資料儲存結構，方便管理使用者資料與商品資訊。在部署階段，Render 的平台簡化了部署流程，尤其是對 Django + PostgreSQL 的支援完善，使我能快速將後端上線；而 Flutter Web 的編譯成果也能直接部署在 Render。過程中遇到的一些挑戰包括配置插件、生成 requirements.txt 及設定環境變數 。這些問題雖然困住我許久，但也加深了我對於全端架構與除錯流程的理解。總結來說，這是一個整合技術、強化實作能力的專案，不僅讓我熟悉了 Flutter 與 Django 的整合方式，也讓我對雲端部署與資料流的完整流程有了清晰的掌握。"
                    }
            }
            ]
        },
        "realTimeVoiceTranslationApp": {
            "title": {
                "en": "Real-Time Voice Translation Application",
                "zh": "即時語音翻譯應用程式"
            },
            "tags": {
                "en": [ "LLM", "Flutter", "Django", "Database"],
                "zh": [ "大型語言模型", "Flutter", "Django", "資料庫"]
            },
            "repositoryLink": "#",
            "sections": [
                {
                    "title": {
                        "en": "Main Functions",
                        "zh": "主要功能"
                    },
                    "content": {
                        "en": "<ul><li>Dynamic Cultural Context Adaptation</li><li>Integrated Language Learning Mode</li><li>Visual and Environmental Context Integration</li><li>Real-Time Translation and Automatic Note Summarization</li><li>Contextual Vocabulary Library and Interactive Definitions</li><li>Interactive Q&A Mode</li></ul>",
                        "zh": "<ul><li>動態文化情境適應</li><li>整合語言學習模式</li><li>視覺與環境上下文整合</li><li>即時翻譯與自動筆記摘要</li><li>語境詞彙庫與互動定義</li><li>互動式問答模式</li></ul>"
                    }
                },
                {
                    "title": {
                        "en": "Learning Target",
                        "zh": "學習目標"
                    },
                    "content": {
                        "en": "<ul><li>Practice creating simple UI components (input/output, buttons, lists, etc.)</li><li>Learn and practice Flutter Widgets like StatelessWidget and StatefulWidget</li><li>Understand state management (Provider, Riverpod, Bloc, etc.)</li><li>Develop backend services using Django and integrate with MySQL</li><li>Implement HTTP requests for push notifications</li><li>Build a complete application with navigation, multi-screen layouts, and animations</li></ul>",
                        "zh": "<ul><li>練習創建簡單的 UI 元件（輸入輸出、按鈕、列表等）</li><li>學習並練習 Flutter Widgets，如 StatelessWidget 和 StatefulWidget</li><li>理解狀態管理（Provider、Riverpod、Bloc 等）</li><li>開發後端服務（使用 Django）並與 MySQL 整合</li><li>實現 HTTP 請求的推送通知</li><li>構建具有導航、多屏佈局和動畫的完整應用程式</li></ul>"
                    }
                },
                {
                    "title": {
                        "en": "Introduction",
                        "zh": "介紹"
                    },
                    "content": {
                        "en": "In my graduation project with my team members, I was mainly responsible for cross-platform front-end development (using Flutter) and backend data storage and management (using MySQL). Both were skills I started self-learning in recent months, beginning with small projects and documenting my progress in OneNote (content is incomplete and will not be made public for now). By the time I officially started the project in my junior year, I had the ability to elevate software design to a whole new level.",
                        "zh": "在我與組員的畢業專題中，我主要負責前端跨平台開發（使用 Flutter）以及後端資料儲存與管理（使用 MySQL）。兩者都是我近幾個月才開始自學，從小項目開始著手，幾乎會以 OneNote 筆記做紀錄(內容不齊全，暫時不會公開)。等到大三真正開始做專題，我會有能力把軟體設計提高到更不一樣的境界。深度學習實作上有困難，之後有可能會改題目。"
                    }
                }
            ]
        }
    }
}   
